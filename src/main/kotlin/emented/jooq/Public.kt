/*
 * This file is generated by jOOQ.
 */
package emented.jooq


import emented.jooq.tables.Category
import emented.jooq.tables.Community
import emented.jooq.tables.Role
import emented.jooq.tables.RoleUserRelation
import emented.jooq.tables.User

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.category</code>.
     */
    val CATEGORY: Category get() = Category.CATEGORY

    /**
     * The table <code>public.community</code>.
     */
    val COMMUNITY: Community get() = Community.COMMUNITY

    /**
     * The table <code>public.role</code>.
     */
    val ROLE: Role get() = Role.ROLE

    /**
     * The table <code>public.role_user_relation</code>.
     */
    val ROLE_USER_RELATION: RoleUserRelation get() = RoleUserRelation.ROLE_USER_RELATION

    /**
     * The table <code>public.user</code>.
     */
    val USER: User get() = User.USER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Category.CATEGORY,
        Community.COMMUNITY,
        Role.ROLE,
        RoleUserRelation.ROLE_USER_RELATION,
        User.USER
    )
}
