/*
 * This file is generated by jOOQ.
 */
package emented.jooq.tables.records


import emented.jooq.tables.Community

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CommunityRecord() : UpdatableRecordImpl<CommunityRecord>(Community.COMMUNITY) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var address: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var language: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var description: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsForChildren")
    open var isForChildren: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var categoryId: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var userId: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsBlocked")
    open var isBlocked: Boolean?
        set(value): Unit = set(8, value)
        get(): Boolean? = get(8) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised CommunityRecord
     */
    constructor(id: Long? = null, name: String? = null, address: String? = null, language: String? = null, description: String? = null, isForChildren: Boolean? = null, categoryId: Long? = null, userId: Long? = null, isBlocked: Boolean? = null): this() {
        this.id = id
        this.name = name
        this.address = address
        this.language = language
        this.description = description
        this.isForChildren = isForChildren
        this.categoryId = categoryId
        this.userId = userId
        this.isBlocked = isBlocked
        resetChangedOnNotNull()
    }
}
